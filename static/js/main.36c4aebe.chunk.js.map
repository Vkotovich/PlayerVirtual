{"version":3,"sources":["panels/Intro.js","App.js","index.js"],"names":["Intro","id","go","route","fetchedUser","userHasSeenIntro","Panel","centered","PanelHeader","Group","Div","className","photo_200","Avatar","src","first_name","FixedLayout","vertical","Button","stretched","size","mode","onClick","ROUTES","STORAGE_KEYS","App","useState","activePanel","setActivePanel","setUser","fetchedState","setFetchedState","snackbar","setSnackbar","ScreenSpinner","popout","setPopout","setUserHasSeenIntro","useEffect","a","bridge","send","user","keys","sheetState","Array","isArray","data","forEach","key","value","JSON","parse","hasSeenIntro","error","Snackbar","layout","onClose","before","style","backgroundColor","fill","width","height","duration","subscribe","detail","type","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","panel","viewIntro","stringify","View","snackbarError","ReactDOM","render","getElementById"],"mappings":"wnBAkCeA,EAvBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,iBAA/B,OACb,eAACC,EAAA,EAAD,CAAOL,GAAIA,EAAIM,UAAU,EAAzB,UACC,cAACC,EAAA,EAAD,2EACEJ,IAAgBC,GACjB,eAAC,WAAD,WACC,cAACI,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,CAAKC,UAAU,OAAf,UACEP,EAAYQ,UAAY,cAACC,EAAA,EAAD,CAAQC,IAAKV,EAAYQ,YAAe,KACjE,+BAAKR,EAAYW,WAAjB,wZAIF,cAACC,EAAA,EAAD,CAAaC,SAAS,SAAtB,SACC,cAACP,EAAA,EAAD,UACC,cAACQ,EAAA,EAAD,CAAQC,WAAS,EAACC,KAAK,IAAIC,KAAK,WAAWC,QAAS,kBAAMpB,EAAGC,IAA7D,+GCZAoB,EACC,OADDA,EAEE,QAGFC,EACE,QADFA,EAEG,aAiGMC,EA9FH,WAAO,IAAD,EACqBC,mBAASH,GAD9B,mBACVI,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVtB,EAFU,KAEGyB,EAFH,OAGuBH,mBAAS,MAHhC,mBAGVI,EAHU,KAGIC,EAHJ,OAIeL,mBAAS,MAJxB,mBAIVM,EAJU,KAIAC,EAJA,OAKWP,mBAAS,cAACQ,EAAA,EAAD,CAAed,KAAK,WALxC,mBAKVe,EALU,KAKFC,EALE,OAM+BV,oBAAS,GANxC,mBAMVrB,EANU,KAMQgC,EANR,KAQjBC,qBAAU,WAAM,4CAQf,gCAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,cACOC,EADP,gBAE0BF,IAAOC,KAAK,qBAAsB,CAAEE,KAAM,CAACnB,EAAoBA,KAFzF,OAEOoB,EAFP,OAGKC,MAAMC,QAAQF,EAAWD,OACtBI,EAAO,GACbH,EAAWD,KAAKK,SAAQ,YAAqB,IAAlBC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAC/B,IAEC,OADAH,EAAKE,GAAOC,EAAQC,KAAKC,MAAMF,GAAS,GAChCD,GACP,KAAKzB,EACJO,EAAgBgB,EAAKvB,IACrB,MACD,KAAKA,EACAuB,EAAKE,IAAQF,EAAKE,GAAKI,eAC1BzB,EAAeL,GACfc,GAAoB,KAMtB,MAAOiB,GACRrB,EAAY,cAACsB,EAAA,EAAD,CACXC,OAAO,WACPC,QAAS,kBAAMxB,EAAY,OAC3ByB,OAAQ,cAAC7C,EAAA,EAAD,CAAQO,KAAM,GAAIuC,MAAO,CAACC,gBAAiB,sBAA3C,SAAkE,cAAC,IAAD,CAAaC,KAAK,OAAOC,MAAO,GAAIC,OAAQ,OACtHC,SAAU,IAJC,6LASZjC,EAAgB,SAKlBA,EAAgB,IAEjBF,EAAQa,GACRN,EAAU,MAvCX,4CARe,sBACfI,IAAOyB,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMpB,EAAY,EAAZA,KACnC,GAAa,yBAAToB,EAAiC,CACpC,IAAMC,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBlB,MAAQH,EAAKwB,OAASxB,EAAKwB,OAAS,eACpDF,SAASG,KAAKC,WAAWC,aAAaN,OALzB,mCAiDfO,KACE,IAEH,IAAMzE,EAAK,SAAA0E,GACVhD,EAAegD,IAGVC,EAAS,uCAAG,WAAOD,GAAP,SAAArC,EAAA,+EAEVC,IAAOC,KAAK,qBAAsB,CACvCQ,IAAKzB,EACL0B,MAAOC,KAAK2B,UAAU,CACrBzB,cAAc,MALA,OAQhBnD,EAAG0E,GARa,+CAUhB3C,EAAY,cAACsB,EAAA,EAAD,CACXC,OAAO,WACPC,QAAS,kBAAMxB,EAAY,OAC3ByB,OAAQ,cAAC7C,EAAA,EAAD,CAAQO,KAAM,GAAIuC,MAAO,CAACC,gBAAiB,sBAA3C,SAAkE,cAAC,IAAD,CAAaC,KAAK,OAAOC,MAAO,GAAIC,OAAQ,OACtHC,SAAU,IAJC,iLAVI,wDAAH,sDAsBf,OACC,eAACe,EAAA,EAAD,CAAMpD,YAAaA,EAAaQ,OAAQA,EAAxC,UACC,cAAC,EAAD,CAAMlC,GAAIsB,EAAaO,aAAcA,EAAckD,cAAehD,IAClE,cAAC,EAAD,CAAO/B,GAAIsB,EAAcnB,YAAaA,EAAaF,GAAI2E,EAAW1E,MAAOoB,EAAalB,iBAAkBA,QCxG3GmC,IAAOC,KAAK,gBAEZwC,IAASC,OAAO,cAAC,EAAD,IAASb,SAASc,eAAe,W","file":"static/js/main.36c4aebe.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nimport './Intro.css';\n\nconst Intro = ({ id, go, route, fetchedUser, userHasSeenIntro }) => (\n\t<Panel id={id} centered={true}>\n\t\t<PanelHeader>Разработка</PanelHeader>\n\t\t{(fetchedUser && !userHasSeenIntro) &&\n\t\t\t<Fragment>\n\t\t\t\t<Group>\n\t\t\t\t\t<Div className='User'>\n\t\t\t\t\t\t{fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\t\t\t<h3>{fetchedUser.first_name}, игра находит на стадии разработки!    Всю информацию можно найти у нас в группе!</h3>\n\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\t\t\t\t<FixedLayout vertical='bottom'>\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"commerce\" onClick={() => go(route)}>\n\t\t\t\t\t\t\tПерейти в группу\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Div>\n\t\t\t\t</FixedLayout>\n\t\t\t</Fragment>\n\t\t}\n\t</Panel>\n);\nexport default Intro;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport Snackbar from '@vkontakte/vkui/dist/components/Snackbar/Snackbar';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Intro';\nimport Intro from './panels/Intro';\n\nconst ROUTES = {\n\tHOME: 'home',\n\tINTRO: 'intro',\n};\n\nconst STORAGE_KEYS = {\n\tSTATE: 'state',\n\tSTATUS: 'viewStatus',\n};\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState(ROUTES.INTRO);\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [fetchedState, setFetchedState] = useState(null);\n\tconst [snackbar, setSnackbar] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [userHasSeenIntro, setUserHasSeenIntro] = useState(false);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst sheetState = await bridge.send('VKWebAppStorageGet', { keys: [STORAGE_KEYS.STATE, STORAGE_KEYS.STATUS]});\n\t\t\tif (Array.isArray(sheetState.keys)) {\n\t\t\t\tconst data = {};\n\t\t\t\tsheetState.keys.forEach(({ key, value }) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[key] = value ? JSON.parse(value) : {};\n\t\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\t\tcase STORAGE_KEYS.STATE:\n\t\t\t\t\t\t\t\tsetFetchedState(data[STORAGE_KEYS.STATE]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase STORAGE_KEYS.STATUS:\n\t\t\t\t\t\t\t\tif (data[key] && data[key].hasSeenIntro) {\n\t\t\t\t\t\t\t\t\tsetActivePanel(ROUTES.HOME);\n\t\t\t\t\t\t\t\t\tsetUserHasSeenIntro(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tsetSnackbar(<Snackbar\n\t\t\t\t\t\t\tlayout='vertical'\n\t\t\t\t\t\t\tonClose={() => setSnackbar(null)}\n\t\t\t\t\t\t\tbefore={<Avatar size={24} style={{backgroundColor: 'var(--dynamic_red)'}}><Icon24Error fill='#fff' width={14} height={14} /></Avatar>}\n\t\t\t\t\t\t\tduration={900}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tПроблема с получением данных из Storage\n\t\t\t\t\t\t</Snackbar>\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsetFetchedState({});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tsetFetchedState({});\n\t\t\t}\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = panel => {\n\t\tsetActivePanel(panel);\n\t};\n\n\tconst viewIntro = async (panel) => {\n\t\ttry {\n\t\t\tawait bridge.send('VKWebAppStorageSet', {\n\t\t\t\tkey: STORAGE_KEYS.STATUS,\n\t\t\t\tvalue: JSON.stringify({\n\t\t\t\t\thasSeenIntro: true,\n\t\t\t\t}),\n\t\t\t});\n\t\t\tgo(panel);\n\t\t} catch (error) {\n\t\t\tsetSnackbar(<Snackbar\n\t\t\t\tlayout='vertical'\n\t\t\t\tonClose={() => setSnackbar(null)}\n\t\t\t\tbefore={<Avatar size={24} style={{backgroundColor: 'var(--dynamic_red)'}}><Icon24Error fill='#fff' width={14} height={14} /></Avatar>}\n\t\t\t\tduration={900}\n\t\t\t>\n\t\t\t\tПроблема с отправкой данных в Storage\n\t\t\t</Snackbar>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id={ROUTES.HOME} fetchedState={fetchedState} snackbarError={snackbar} />\n\t\t\t<Intro id={ROUTES.INTRO} fetchedUser={fetchedUser} go={viewIntro} route={ROUTES.HOME} userHasSeenIntro={userHasSeenIntro} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}